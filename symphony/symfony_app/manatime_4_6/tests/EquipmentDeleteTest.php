<?php

namespace App\Tests;

use PHPUnit\Framework\TestCase;
use GuzzleHttp\Client;
use PDO;


class EquipmentDeleteTest extends TestCase
{
    /*
     *database pdo connection 
     */
    public static $dbh = null;

    /**
     * Last autogenerated id from test inserts to have an id to make test updates using that id
     */
    public $lastId = null;

    /**
     *@beforeClass
     */
    public static function beforeClassFunction(): void
    {
        /**
         * Create a direct database connection.
         * Direct connection without symfony is preferred to avoid complications.
         */

        self::$dbh = new PDO('mysql:host=172.17.0.3;dbname=app', 'root', 'mypswd');
    }


    /**
     *@afterClass
     */
    public static function afterClassFunction(): void
    {
        /**
         * cleanup pdo database connection
         */
        self::$dbh = null;
    }

    /**
     * @before
     */
    public function beforeEachTest(): void
    {
        /**clean and 
         * populate database with test data
         */
        self::$dbh->query("TRUNCATE TABLE manatime_equipment");
        self::$dbh->query("INSERT INTO manatime_equipment (name,category,number,description,created_at,updated_at)VALUES ('keyboard',           'input device',     'sn656565',    'keyboard given to sanjeev','2023-06-13 12:23:45','2023-06-13 13:23:45')");
        self::$dbh->query("INSERT INTO manatime_equipment (name,category,number,description,created_at,updated_at)VALUES ('mouse',              'input device',     'zx5ggtg5',    'given to Marie jo',        '2023-06-13 13:23:45','2023-06-14 13:23:45')");
        self::$dbh->query("INSERT INTO manatime_equipment (name,category,number,description,created_at,updated_at)VALUES ('screen',             'display device',   'hyy656565',   'damaged unrepairable',     '2023-06-13 14:23:45','2023-06-15 13:23:45')");
        self::$dbh->query("INSERT INTO manatime_equipment (name,category,number,description,created_at,updated_at)VALUES ('laptop',             'input device',     '09809807jh',  'reported malfunc,untested','2023-06-13 15:23:45','2023-06-16 13:23:45')");
        self::$dbh->query("INSERT INTO manatime_equipment (name,category,number,description,created_at,updated_at)VALUES ('removable hard disk','input device',     'hkhjkgyt987', 'damaged by sanjeev',       '2023-06-13 16:23:45','2023-06-17 13:23:45')");

        //get autogenerated id from last insert
        $stmt = self::$dbh->query("SELECT LAST_INSERT_ID()");
        $this->lastId = $stmt->fetchColumn();
    }


    /**
     * @after
     */
    public function afterEachTest(): void
    {
        /**
         * Cleans up database and resets it to blank
         */
        self::$dbh->query("DELETE FROM manatime_equipment");
    }





    //test the deletion of an equipment to database
    public function testEquipmentDel(): void
    {
        $client = new \GuzzleHttp\Client([
            'base_uri' => 'http://localhost:8000',
            'defaults' => [
                'exceptions' => false
            ]
        ]);

        $response = $client->get('/equipment/delete/1');
        $outputData = json_decode($response->getBody());


        /**
         * Confirm that 1 record was actually deleted in the database, and that no errors occured during persisting.
         * Ex:database connection errors etc.  
         */
        $sql = "SELECT * FROM  manatime_equipment WHERE id='1'";
        $equipmentData = self::$dbh->query($sql)->fetchAll(\PDO::FETCH_ASSOC);
        $this->assertEmpty($equipmentData);
        $this->assertEquals($outputData->message,'1 removed');

        //check that inexistant data cannot be removed
        $response = $client->get('/equipment/delete/1');
        $outputData = json_decode($response->getBody());
        $this->assertEquals($outputData->message,'1 not found');

    }






}
